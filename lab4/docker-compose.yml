services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
    networks:
      - mynet

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - mynet

  topic-creator:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - kafka
    command: >
      bash -c "until kafka-topics --create --topic tasks --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092; do sleep 5; done"
    networks:
      - mynet

  manager:
    build:
      context: .
      dockerfile: Dockerfile.manager
    ports:
      - "5000:5000"
    depends_on:
      - topic-creator
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - mynet

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      - topic-creator
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    deploy:
      replicas: 3
    networks:
      - mynet

networks:
  mynet:
    driver: bridge

volumes:
  zookeeper-data:
  kafka-data:
